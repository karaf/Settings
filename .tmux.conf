# use UTF8
#set -g utf8
#set-window-option -g utf8 on

# set mouse-utf8 on
# mouse options
#set -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#set -g mouse-resize-pane on

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# set -g default-terminal "screen"
# set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"
set -g xterm-keys on

set -g escape-time 10

unbind C-b
set -g prefix C-a
bind a send-prefix

# BBN specific options
#set-option -g default-shell /bin/bash
#set-option -g default-command /bin/bash

set-option -ga update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"


set -g history-limit 10000

# flow control
# setw -g c0-change-interval 1000 # default is 100
# setw -g c0-change-trigger  50   # default is 250

#setw -g c0-change-interval 50
#setw -g c0-change-trigger  75

# window splitting
unbind %
bind | split-window -c '#{pane_current_path}' -h
bind - split-window -c '#{pane_current_path}' -v

# clipboard handling (http://unix.stackexchange.com/questions/15715/getting-tmux-to-copy-a-buffer-to-the-clipboard)
# move x clipboard into tmux paste buffer
bind C-P run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # move tmux copy buffer into x clipboard
bind C-Y run "tmux save-buffer - | xclip -i"

# emacs
set-window-option -g mode-keys emacs

# vim
#set-window-option -g mode-keys vi
#bind [ copy-mode
#bind C-[ copy-mode
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection
#bind -t vi-copy V rectangle-toggle
#bind C-] paste-buffer


#unbind k
#unbind j
#unbind l
#unbind h
# unbind C-\

#bind k  select-pane -U
#bind j  select-pane -D
#bind l  select-pane -L
#bind h  select-pane -R

#bind C-k  select-pane -U
#bind C-j  select-pane -D
#bind C-l  select-pane -L
#bind C-h  select-pane -R

#bind C-m  select-pane -t :.+


#bind H resize-pane -L 5
#bind J resize-pane -D 5
#bind K resize-pane -U 5
#bind L resize-pane -R 5

#bind C-a last-window
#bind C-n select-window -t :+
#bind C-p select-window -t :-

#bind > swap-window -t :+
#bind < swap-window -t :-

#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


#bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#bind-key -t vi-copy  C-h "select-pane -L"
#bind-key -t vi-copy  C-j "select-pane -D"
#bind-key -t vi-copy  C-k "select-pane -U"
#bind-key -t vi-copy  C-l "select-pane -R"
#bind-key -t vi-copy  C-\ "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l


# Smart pane switching with awareness of vim splits
# bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
# bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
# bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
# bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour250 #base01

set-option -g pane-border-style fg=colour235,bold,bg=colour236 #base02
set-option -g pane-active-border-style fg=colour250,bg=colour250 #base01

# colorize messages in the command line
#set-option -g message-bg black #base02
#set-option -g message-fg colour166 #brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
#set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 15              # set update frequencey (default 15 seconds)
set -g status-justify left             # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity off
set -g visual-activity off

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
#set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
#set-window-option -g window-status-fg colour136 #brightblue #base0
#set-window-option -g window-status-bg colour236
#set-window-option -g window-status-attr dim

#set-window-option -g window-status-current-fg colour166 #brightred #orange
#set-window-option -g window-status-current-bg colour236
#set-window-option -g window-status-current-attr bright
set-window-option -g xterm-keys on

set -g status-left-length 0

# show session name, window & pane number, date and time on right side of
set -g status-right-length 60
set -g status-right "#[fg=colour14]#S #I:#P #[fg=yellow]:: #h #[fg=colour118]:: %l:%M %p::"

# List of plugins
# # Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  '


# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
#run-shell '~/.tmux/plugins/tpm/tpm'
#run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
run-shell '/mnt/matylda3/karafiat/BABEL/GIT/tmux-resurrect/resurrect.tmux'

set -g @resurrect-capture-pane-contents 'on' # kindaa works
